<!DOCTYPE html>
<html>
<head>
    <title>Socket.IO Chat</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css">
    <link rel="stylesheet" href="./style/style.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.0/socket.io.js"></script>

</head>
<body>
    <h1>Socket.IO Chat</h1>
    <ul id="messages"></ul>
    <input id="name" type="text" placeholder="Your Name">
    <input id="message" type="text" placeholder="Location">
    <button>Send</button>

    <div id="map" style="height: 50rem; width: 100%"></div>
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    script.
        const socket = io();

        //- map
        let map = L.map('map').setView([51.505, -0.09], 13);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);


            //- navigator.geolocation.watchposition(position => {
            //-     currentLocation = {
            //-         latitude: position.coords.latitude,
            //-         longitude: position.coords.longitude
            //-     };

            //-     console.log(currentLocation)

            //-     //- send message to another device
            //-     socket.emit('chat message', { currentLocation });
            //- })


            //- //- recive the message from another device
            //- socket.on('chat message', (data) => {
            //-     //- data.currentLocation

            //- });
            let currentLocation;
            navigator.geolocation.watchPosition(position => {
                currentLocation = {
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude
                };

                //- console.log(currentLocation);
                //- L.marker([position.coords.latitude, position.coords.longitude])
                //-     .addTo(map)
                //-     .bindPopup('user location')
                //-     .openPopup();

                socket.emit('chat message', { currentLocation });
            });

                console.log(currentLocation);
            

            // Listen for incoming messages from another device
            let incommingLocation;
            socket.on('chat message', (data) => {
                // Access the received current location data
                const receivedLocation = data.currentLocation;
                console.log('Received location:', receivedLocation);
                
                incommingLocation = {
                    latitude: receivedLocation.latitude + .5,
                    longitude: receivedLocation.longitude + .5,
                }
                //- L.marker([receivedLocation.latitude + .5, receivedLocation.longitude + .5])
                //-     .addTo(map)
                //-     .bindPopup('my location')
                //-     .openPopup();
            });

            L.Routing.control({
                waypoints: [
                    L.lnatlng(incommingLocation.latitude, incommingLocation.longitude),
                    L.lnatlng(currentLocation.latitude, currentLocation.longitude),
                ]
            }).addTo(map)

        //- map.fitbounds([currentLocation, incommingLocation])

</body>
</html>
