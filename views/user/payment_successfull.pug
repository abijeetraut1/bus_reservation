doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Payment Successful
    link(rel="stylesheet", href="../../style/paymentsuccessfull.css")
  
  body
    .success-container
      // Confetti Animation
      .confetti
      .confetti
      .confetti
      .confetti
      .confetti
      .confetti
      .confetti
      .confetti
      .confetti

      // Success Icon with Pulse Ring
      .success-icon
        .pulse-ring
        svg.checkmark(viewBox="0 0 24 24")
          path(d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z")

      h1.success-title Payment Successful!
      
      p.success-message
        | Thank you for your purchase. Your transaction has been processed successfully and you should receive a confirmation email shortly.

      .transaction-details
        .detail-row
          span.detail-label Transaction ID
          span.detail-value #TXN-2024-8956
        
        .detail-row
          span.detail-label Date & Time
          span.detail-value#current-datetime
        
        
        .detail-row
          span.detail-label Total Amount
          span.detail-value nrs129.99

      .action-buttons
        a.btn.btn-primary(href="/tickets")
          | Tickets

    script.
      // Set current date and time
      function updateDateTime() {
          const now = new Date();
          const options = {
              year: 'numeric',
              month: 'short',
              day: 'numeric',
              hour: '2-digit',
              minute: '2-digit'
          };
          document.getElementById('current-datetime').textContent = now.toLocaleDateString('en-US', options);
      }


      // Add extra visual effects
      function createFloatingElements() {
          const container = document.querySelector('.success-container');

          // Add random sparkle effects
          setInterval(() => {
              const sparkle = document.createElement('div');
              sparkle.style.cssText = `
                  position: absolute;
                  width: 4px;
                  height: 4px;
                  background: #ffd700;
                  border-radius: 50%;
                  top: ${Math.random() * 100}%;
                  left: ${Math.random() * 100}%;
                  animation: sparkle 1.5s ease-out forwards;
                  pointer-events: none;
              `;

              const sparkleKeyframes = `
                  @keyframes sparkle {
                      0% { opacity: 0; transform: scale(0); }
                      50% { opacity: 1; transform: scale(1); }
                      100% { opacity: 0; transform: scale(0); }
                  }
              `;

              if (!document.querySelector('#sparkle-keyframes')) {
                  const style = document.createElement('style');
                  style.id = 'sparkle-keyframes';
                  style.textContent = sparkleKeyframes;
                  document.head.appendChild(style);
              }

              container.appendChild(sparkle);

              setTimeout(() => {
                  sparkle.remove();
              }, 1500);
          }, 800);
      }

      // Initialize
      updateDateTime();
      setTimeout(createFloatingElements, 2000);

      // Add click effects to buttons
      document.querySelectorAll('.btn').forEach(btn => {
          btn.addEventListener('click', function(e) {
              const ripple = document.createElement('span');
              const rect = this.getBoundingClientRect();
              const size = Math.max(rect.width, rect.height);
              const x = e.clientX - rect.left - size / 2;
              const y = e.clientY - rect.top - size / 2;

              ripple.style.cssText = `
                  position: absolute;
                  border-radius: 50%;
                  background: rgba(255,255,255,0.6);
                  width: ${size}px;
                  height: ${size}px;
                  left: ${x}px;
                  top: ${y}px;
                  animation: ripple 0.6s ease-out;
                  pointer-events: none;
              `;

              this.style.position = 'relative';
              this.style.overflow = 'hidden';
              this.appendChild(ripple);

              setTimeout(() => ripple.remove(), 600);
          });
      });

      // Add ripple animation
      const rippleStyle = document.createElement('style');
      rippleStyle.textContent = `
          @keyframes ripple {
              0% { transform: scale(0); opacity: 1; }
              100% { transform: scale(2); opacity: 0; }
          }
      `;
      document.head.appendChild(rippleStyle);